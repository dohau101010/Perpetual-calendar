CCS PCM C Compiler, Version 5.015, 5967               09-Apr-24 13:05

               Filename:   E:\CCS VXL\CALENDER_PROJECT\main.lst

               ROM used:   2012 words (25%)
                           Largest free fragment is 2048
               RAM used:   50 (14%) at main() level
                           66 (18%) worst case
               Stack used: 5 locations (4 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  07
0001:  MOVWF  0A
0002:  GOTO   747
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   045
.................... #include <16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  C0
0036:  RETLW  F9
0037:  RETLW  A4
0038:  RETLW  B0
0039:  RETLW  99
003A:  RETLW  92
003B:  RETLW  82
003C:  RETLW  F8
003D:  RETLW  80
003E:  RETLW  90
003F:  RETLW  88
0040:  RETLW  83
0041:  RETLW  C6
0042:  RETLW  A1
0043:  RETLW  86
0044:  RETLW  8E
*
0265:  MOVF   4E,W
0266:  ANDLW  07
0267:  MOVWF  77
0268:  RRF    4E,W
0269:  MOVWF  78
026A:  RRF    78,F
026B:  RRF    78,F
026C:  MOVLW  1F
026D:  ANDWF  78,F
026E:  MOVF   78,W
026F:  ADDWF  50,W
0270:  MOVWF  04
0271:  BCF    03.7
0272:  BTFSC  51.0
0273:  BSF    03.7
0274:  CLRF   78
0275:  INCF   78,F
0276:  INCF   77,F
0277:  GOTO   279
0278:  RLF    78,F
0279:  DECFSZ 77,F
027A:  GOTO   278
027B:  MOVF   4F,F
027C:  BTFSC  03.2
027D:  GOTO   281
027E:  MOVF   78,W
027F:  IORWF  00,F
0280:  GOTO   284
0281:  COMF   78,F
0282:  MOVF   78,W
0283:  ANDWF  00,F
0284:  RETURN
0285:  MOVF   4E,W
0286:  ANDLW  07
0287:  MOVWF  77
0288:  RRF    4E,W
0289:  MOVWF  78
028A:  RRF    78,F
028B:  RRF    78,F
028C:  MOVLW  1F
028D:  ANDWF  78,F
028E:  MOVF   78,W
028F:  ADDWF  4F,W
0290:  MOVWF  04
0291:  BCF    03.7
0292:  BTFSC  50.0
0293:  BSF    03.7
0294:  MOVF   00,W
0295:  MOVWF  78
0296:  INCF   77,F
0297:  GOTO   299
0298:  RRF    78,F
0299:  DECFSZ 77,F
029A:  GOTO   298
029B:  RETURN
*
036D:  CLRF   78
036E:  CLRF   79
036F:  CLRF   77
0370:  CLRF   7A
0371:  MOVF   52,W
0372:  BTFSS  03.2
0373:  GOTO   377
0374:  MOVF   51,W
0375:  BTFSC  03.2
0376:  GOTO   391
0377:  MOVLW  10
0378:  MOVWF  53
0379:  BCF    03.0
037A:  RLF    4F,F
037B:  RLF    50,F
037C:  RLF    77,F
037D:  RLF    7A,F
037E:  MOVF   52,W
037F:  SUBWF  7A,W
0380:  BTFSS  03.2
0381:  GOTO   384
0382:  MOVF   51,W
0383:  SUBWF  77,W
0384:  BTFSS  03.0
0385:  GOTO   38D
0386:  MOVF   51,W
0387:  SUBWF  77,F
0388:  BTFSS  03.0
0389:  DECF   7A,F
038A:  MOVF   52,W
038B:  SUBWF  7A,F
038C:  BSF    03.0
038D:  RLF    78,F
038E:  RLF    79,F
038F:  DECFSZ 53,F
0390:  GOTO   379
0391:  RETURN
*
03DB:  MOVLW  8E
03DC:  MOVWF  77
03DD:  MOVF   50,W
03DE:  MOVWF  78
03DF:  MOVF   4F,W
03E0:  MOVWF  79
03E1:  CLRF   7A
03E2:  MOVF   78,F
03E3:  BTFSS  03.2
03E4:  GOTO   3EF
03E5:  MOVF   79,W
03E6:  MOVWF  78
03E7:  CLRF   79
03E8:  MOVLW  08
03E9:  SUBWF  77,F
03EA:  MOVF   78,F
03EB:  BTFSS  03.2
03EC:  GOTO   3EF
03ED:  CLRF   77
03EE:  GOTO   3F7
03EF:  BCF    03.0
03F0:  BTFSC  78.7
03F1:  GOTO   3F6
03F2:  RLF    79,F
03F3:  RLF    78,F
03F4:  DECF   77,F
03F5:  GOTO   3EF
03F6:  BCF    78.7
*
0407:  MOVF   4F,W
0408:  BTFSC  03.2
0409:  GOTO   4CC
040A:  MOVWF  5B
040B:  MOVF   53,W
040C:  BTFSC  03.2
040D:  GOTO   4CC
040E:  SUBWF  5B,F
040F:  BTFSS  03.0
0410:  GOTO   416
0411:  MOVLW  7F
0412:  ADDWF  5B,F
0413:  BTFSC  03.0
0414:  GOTO   4CC
0415:  GOTO   41C
0416:  MOVLW  81
0417:  SUBWF  5B,F
0418:  BTFSS  03.0
0419:  GOTO   4CC
041A:  BTFSC  03.2
041B:  GOTO   4CC
041C:  MOVF   5B,W
041D:  MOVWF  77
041E:  CLRF   78
041F:  CLRF   79
0420:  CLRF   7A
0421:  CLRF   5A
0422:  MOVF   50,W
0423:  MOVWF  59
0424:  BSF    59.7
0425:  MOVF   51,W
0426:  MOVWF  58
0427:  MOVF   52,W
0428:  MOVWF  57
0429:  MOVLW  19
042A:  MOVWF  5B
042B:  MOVF   56,W
042C:  SUBWF  57,F
042D:  BTFSC  03.0
042E:  GOTO   43F
042F:  MOVLW  01
0430:  SUBWF  58,F
0431:  BTFSC  03.0
0432:  GOTO   43F
0433:  SUBWF  59,F
0434:  BTFSC  03.0
0435:  GOTO   43F
0436:  SUBWF  5A,F
0437:  BTFSC  03.0
0438:  GOTO   43F
0439:  INCF   5A,F
043A:  INCF   59,F
043B:  INCF   58,F
043C:  MOVF   56,W
043D:  ADDWF  57,F
043E:  GOTO   471
043F:  MOVF   55,W
0440:  SUBWF  58,F
0441:  BTFSC  03.0
0442:  GOTO   45A
0443:  MOVLW  01
0444:  SUBWF  59,F
0445:  BTFSC  03.0
0446:  GOTO   45A
0447:  SUBWF  5A,F
0448:  BTFSC  03.0
0449:  GOTO   45A
044A:  INCF   5A,F
044B:  INCF   59,F
044C:  MOVF   55,W
044D:  ADDWF  58,F
044E:  MOVF   56,W
044F:  ADDWF  57,F
0450:  BTFSS  03.0
0451:  GOTO   471
0452:  INCF   58,F
0453:  BTFSS  03.2
0454:  GOTO   471
0455:  INCF   59,F
0456:  BTFSS  03.2
0457:  GOTO   471
0458:  INCF   5A,F
0459:  GOTO   471
045A:  MOVF   54,W
045B:  IORLW  80
045C:  SUBWF  59,F
045D:  BTFSC  03.0
045E:  GOTO   470
045F:  MOVLW  01
0460:  SUBWF  5A,F
0461:  BTFSC  03.0
0462:  GOTO   470
0463:  INCF   5A,F
0464:  MOVF   54,W
0465:  IORLW  80
0466:  ADDWF  59,F
0467:  MOVF   55,W
0468:  ADDWF  58,F
0469:  BTFSS  03.0
046A:  GOTO   44E
046B:  INCF   59,F
046C:  BTFSS  03.2
046D:  GOTO   44E
046E:  INCF   5A,F
046F:  GOTO   44E
0470:  BSF    7A.0
0471:  DECFSZ 5B,F
0472:  GOTO   474
0473:  GOTO   47F
0474:  BCF    03.0
0475:  RLF    57,F
0476:  RLF    58,F
0477:  RLF    59,F
0478:  RLF    5A,F
0479:  BCF    03.0
047A:  RLF    7A,F
047B:  RLF    79,F
047C:  RLF    78,F
047D:  RLF    5C,F
047E:  GOTO   42B
047F:  BTFSS  5C.0
0480:  GOTO   487
0481:  BCF    03.0
0482:  RRF    78,F
0483:  RRF    79,F
0484:  RRF    7A,F
0485:  RRF    5C,F
0486:  GOTO   48A
0487:  DECF   77,F
0488:  BTFSC  03.2
0489:  GOTO   4CC
048A:  BTFSC  5C.7
048B:  GOTO   4B3
048C:  BCF    03.0
048D:  RLF    57,F
048E:  RLF    58,F
048F:  RLF    59,F
0490:  RLF    5A,F
0491:  MOVF   56,W
0492:  SUBWF  57,F
0493:  BTFSC  03.0
0494:  GOTO   49F
0495:  MOVLW  01
0496:  SUBWF  58,F
0497:  BTFSC  03.0
0498:  GOTO   49F
0499:  SUBWF  59,F
049A:  BTFSC  03.0
049B:  GOTO   49F
049C:  SUBWF  5A,F
049D:  BTFSS  03.0
049E:  GOTO   4C2
049F:  MOVF   55,W
04A0:  SUBWF  58,F
04A1:  BTFSC  03.0
04A2:  GOTO   4AA
04A3:  MOVLW  01
04A4:  SUBWF  59,F
04A5:  BTFSC  03.0
04A6:  GOTO   4AA
04A7:  SUBWF  5A,F
04A8:  BTFSS  03.0
04A9:  GOTO   4C2
04AA:  MOVF   54,W
04AB:  IORLW  80
04AC:  SUBWF  59,F
04AD:  BTFSC  03.0
04AE:  GOTO   4B3
04AF:  MOVLW  01
04B0:  SUBWF  5A,F
04B1:  BTFSS  03.0
04B2:  GOTO   4C2
04B3:  INCF   7A,F
04B4:  BTFSS  03.2
04B5:  GOTO   4C2
04B6:  INCF   79,F
04B7:  BTFSS  03.2
04B8:  GOTO   4C2
04B9:  INCF   78,F
04BA:  BTFSS  03.2
04BB:  GOTO   4C2
04BC:  INCF   77,F
04BD:  BTFSC  03.2
04BE:  GOTO   4CC
04BF:  RRF    78,F
04C0:  RRF    79,F
04C1:  RRF    7A,F
04C2:  MOVF   50,W
04C3:  MOVWF  5B
04C4:  MOVF   54,W
04C5:  XORWF  5B,F
04C6:  BTFSS  5B.7
04C7:  GOTO   4CA
04C8:  BSF    78.7
04C9:  GOTO   4D0
04CA:  BCF    78.7
04CB:  GOTO   4D0
04CC:  CLRF   77
04CD:  CLRF   78
04CE:  CLRF   79
04CF:  CLRF   7A
*
04D8:  MOVLW  8E
04D9:  MOVWF  77
04DA:  MOVF   4D,W
04DB:  SUBWF  77,F
04DC:  MOVF   4E,W
04DD:  MOVWF  79
04DE:  MOVF   4F,W
04DF:  MOVWF  78
04E0:  BSF    79.7
04E1:  MOVF   77,F
04E2:  BTFSC  03.2
04E3:  GOTO   4EF
04E4:  BCF    03.0
04E5:  MOVF   79,F
04E6:  BTFSS  03.2
04E7:  GOTO   4EB
04E8:  MOVF   78,F
04E9:  BTFSC  03.2
04EA:  GOTO   4EF
04EB:  RRF    79,F
04EC:  RRF    78,F
04ED:  DECFSZ 77,F
04EE:  GOTO   4E4
04EF:  BTFSS  4E.7
04F0:  GOTO   4F6
04F1:  COMF   78,F
04F2:  COMF   79,F
04F3:  INCF   78,F
04F4:  BTFSC  03.2
04F5:  INCF   79,F
*
0549:  MOVF   54,W
054A:  CLRF   78
054B:  SUBWF  53,W
054C:  BTFSC  03.0
054D:  GOTO   551
054E:  MOVF   53,W
054F:  MOVWF  77
0550:  GOTO   55D
0551:  CLRF   77
0552:  MOVLW  08
0553:  MOVWF  55
0554:  RLF    53,F
0555:  RLF    77,F
0556:  MOVF   54,W
0557:  SUBWF  77,W
0558:  BTFSC  03.0
0559:  MOVWF  77
055A:  RLF    78,F
055B:  DECFSZ 55,F
055C:  GOTO   554
055D:  RETURN
*
0569:  CLRF   77
056A:  CLRF   78
056B:  MOVF   53,W
056C:  BCF    03.0
056D:  BTFSC  54.0
056E:  ADDWF  77,F
056F:  RRF    77,F
0570:  RRF    78,F
0571:  BTFSC  54.1
0572:  ADDWF  77,F
0573:  RRF    77,F
0574:  RRF    78,F
0575:  BTFSC  54.2
0576:  ADDWF  77,F
0577:  RRF    77,F
0578:  RRF    78,F
0579:  BTFSC  54.3
057A:  ADDWF  77,F
057B:  RRF    77,F
057C:  RRF    78,F
057D:  BTFSC  54.4
057E:  ADDWF  77,F
057F:  RRF    77,F
0580:  RRF    78,F
0581:  BTFSC  54.5
0582:  ADDWF  77,F
0583:  RRF    77,F
0584:  RRF    78,F
0585:  BTFSC  54.6
0586:  ADDWF  77,F
0587:  RRF    77,F
0588:  RRF    78,F
0589:  BTFSC  54.7
058A:  ADDWF  77,F
058B:  RRF    77,F
058C:  RRF    78,F
....................  
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses hs 
.................... #use delay(clock=20m) 
*
029C:  MOVLW  4E
029D:  MOVWF  04
029E:  BCF    03.7
029F:  MOVF   00,W
02A0:  BTFSC  03.2
02A1:  GOTO   2AF
02A2:  MOVLW  06
02A3:  MOVWF  78
02A4:  CLRF   77
02A5:  DECFSZ 77,F
02A6:  GOTO   2A5
02A7:  DECFSZ 78,F
02A8:  GOTO   2A4
02A9:  MOVLW  7B
02AA:  MOVWF  77
02AB:  DECFSZ 77,F
02AC:  GOTO   2AB
02AD:  DECFSZ 00,F
02AE:  GOTO   2A2
02AF:  RETURN
.................... #use i2c(master,slow,sda=pin_c4,scl=pin_c3) 
*
0051:  MOVLW  08
0052:  MOVWF  78
0053:  MOVLW  04
0054:  MOVWF  77
0055:  DECFSZ 77,F
0056:  GOTO   055
0057:  BCF    07.3
0058:  BCF    27.3
0059:  MOVF   27,W
005A:  BSF    03.5
005B:  MOVWF  07
005C:  MOVLW  03
005D:  MOVWF  77
005E:  DECFSZ 77,F
005F:  GOTO   05E
0060:  BCF    03.5
0061:  RLF    50,F
0062:  BCF    07.4
0063:  BTFSS  03.0
0064:  GOTO   06B
0065:  BSF    27.4
0066:  MOVF   27,W
0067:  BSF    03.5
0068:  MOVWF  07
0069:  GOTO   06F
006A:  BCF    03.5
006B:  BCF    27.4
006C:  MOVF   27,W
006D:  BSF    03.5
006E:  MOVWF  07
006F:  NOP
0070:  BCF    03.5
0071:  BSF    27.3
0072:  MOVF   27,W
0073:  BSF    03.5
0074:  MOVWF  07
0075:  BCF    03.5
0076:  BTFSS  07.3
0077:  GOTO   076
0078:  DECFSZ 78,F
0079:  GOTO   053
007A:  MOVLW  04
007B:  MOVWF  77
007C:  DECFSZ 77,F
007D:  GOTO   07C
007E:  BCF    07.3
007F:  BCF    27.3
0080:  MOVF   27,W
0081:  BSF    03.5
0082:  MOVWF  07
0083:  NOP
0084:  BCF    03.5
0085:  BSF    27.4
0086:  MOVF   27,W
0087:  BSF    03.5
0088:  MOVWF  07
0089:  MOVLW  03
008A:  MOVWF  77
008B:  DECFSZ 77,F
008C:  GOTO   08B
008D:  MOVLW  03
008E:  MOVWF  77
008F:  DECFSZ 77,F
0090:  GOTO   08F
0091:  BCF    03.5
0092:  BSF    27.3
0093:  MOVF   27,W
0094:  BSF    03.5
0095:  MOVWF  07
0096:  BCF    03.5
0097:  BTFSS  07.3
0098:  GOTO   097
0099:  CLRF   78
009A:  MOVLW  03
009B:  MOVWF  77
009C:  DECFSZ 77,F
009D:  GOTO   09C
009E:  BTFSC  07.4
009F:  BSF    78.0
00A0:  BCF    07.3
00A1:  BCF    27.3
00A2:  MOVF   27,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  BCF    07.4
00A7:  BCF    27.4
00A8:  MOVF   27,W
00A9:  BSF    03.5
00AA:  MOVWF  07
00AB:  BCF    03.5
00AC:  RETURN
00AD:  MOVLW  08
00AE:  MOVWF  52
00AF:  MOVF   77,W
00B0:  MOVWF  53
00B1:  BSF    27.4
00B2:  MOVF   27,W
00B3:  BSF    03.5
00B4:  MOVWF  07
00B5:  MOVLW  03
00B6:  MOVWF  77
00B7:  DECFSZ 77,F
00B8:  GOTO   0B7
00B9:  BCF    03.5
00BA:  BSF    27.3
00BB:  MOVF   27,W
00BC:  BSF    03.5
00BD:  MOVWF  07
00BE:  BCF    03.5
00BF:  BTFSS  07.3
00C0:  GOTO   0BF
00C1:  BTFSC  07.4
00C2:  BSF    03.0
00C3:  BTFSS  07.4
00C4:  BCF    03.0
00C5:  RLF    78,F
00C6:  MOVLW  04
00C7:  MOVWF  77
00C8:  DECFSZ 77,F
00C9:  GOTO   0C8
00CA:  BCF    27.3
00CB:  MOVF   27,W
00CC:  BSF    03.5
00CD:  MOVWF  07
00CE:  BCF    03.5
00CF:  BCF    07.3
00D0:  DECFSZ 52,F
00D1:  GOTO   0B1
00D2:  BSF    27.4
00D3:  MOVF   27,W
00D4:  BSF    03.5
00D5:  MOVWF  07
00D6:  MOVLW  03
00D7:  MOVWF  77
00D8:  DECFSZ 77,F
00D9:  GOTO   0D8
00DA:  BCF    03.5
00DB:  BCF    07.4
00DC:  MOVF   53,W
00DD:  BTFSC  03.2
00DE:  GOTO   0E4
00DF:  BCF    27.4
00E0:  MOVF   27,W
00E1:  BSF    03.5
00E2:  MOVWF  07
00E3:  BCF    03.5
00E4:  NOP
00E5:  BSF    27.3
00E6:  MOVF   27,W
00E7:  BSF    03.5
00E8:  MOVWF  07
00E9:  BCF    03.5
00EA:  BTFSS  07.3
00EB:  GOTO   0EA
00EC:  MOVLW  04
00ED:  MOVWF  77
00EE:  DECFSZ 77,F
00EF:  GOTO   0EE
00F0:  BCF    07.3
00F1:  BCF    27.3
00F2:  MOVF   27,W
00F3:  BSF    03.5
00F4:  MOVWF  07
00F5:  MOVLW  03
00F6:  MOVWF  77
00F7:  DECFSZ 77,F
00F8:  GOTO   0F7
00F9:  BCF    03.5
00FA:  BCF    07.4
00FB:  BCF    27.4
00FC:  MOVF   27,W
00FD:  BSF    03.5
00FE:  MOVWF  07
00FF:  BCF    03.5
0100:  RETURN
....................  
.................... #include <ds1307.c> 
.................... //dinh nghia dia chi ghi va dia chi doc ds1307 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                     
.................... #define ds13_addr_wr 0xd0 
.................... #define ds13_addr_rd 0xd1 
....................  
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... //khai bao 2 mang:  
.................... //mang ghi: giay-phut-gio-thu-ngay-thang-nam-madk_msds   
.................... //mang doc: giay-phut-gio-thu-ngay-thang-nam-madk_msds   
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx       
.................... unsigned int8 time_w[9]={0x50,0x58,0x14,0x08,0x05,0x06,0x22,0x90,0x95};   
*
075E:  MOVLW  50
075F:  BCF    03.6
0760:  MOVWF  28
0761:  MOVLW  58
0762:  MOVWF  29
0763:  MOVLW  14
0764:  MOVWF  2A
0765:  MOVLW  08
0766:  MOVWF  2B
0767:  MOVLW  05
0768:  MOVWF  2C
0769:  MOVLW  06
076A:  MOVWF  2D
076B:  MOVLW  22
076C:  MOVWF  2E
076D:  MOVLW  90
076E:  MOVWF  2F
076F:  MOVLW  95
0770:  MOVWF  30
.................... unsigned int8 time_r[9]={0x30,0x30,0x10,0x08,0x20,0x02,0x20,0x90,0x96}; 
0771:  MOVLW  30
0772:  MOVWF  31
0773:  MOVWF  32
0774:  MOVLW  10
0775:  MOVWF  33
0776:  MOVLW  08
0777:  MOVWF  34
0778:  MOVLW  20
0779:  MOVWF  35
077A:  MOVLW  02
077B:  MOVWF  36
077C:  MOVLW  20
077D:  MOVWF  37
077E:  MOVLW  90
077F:  MOVWF  38
0780:  MOVLW  96
0781:  MOVWF  39
.................... #define giay_ds  time_r[0]               
.................... #define phut_ds  time_r[1]                   
.................... #define gio_ds   time_r[2] 
.................... #define thu_ds   time_r[3] 
.................... #define ngay_ds  time_r[4] 
.................... #define thang_ds time_r[5]                   
.................... #define nam_ds   time_r[6] 
....................  
.................... #define ma_qd   time_w[8]  
.................... #define ma_ds   time_r[8]                                        
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... //cap nhat time: giay-phut-gio-thu-ngay-thang-nam-madk_msds   
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  
.................... void ds1307_cap_nhat_time(int1 sel)                  
.................... {          
....................    unsigned int8 i;    
....................    i2c_start(); 
*
0187:  BSF    27.4
0188:  MOVF   27,W
0189:  BSF    03.5
018A:  MOVWF  07
018B:  MOVLW  04
018C:  MOVWF  77
018D:  DECFSZ 77,F
018E:  GOTO   18D
018F:  BCF    03.5
0190:  BSF    27.3
0191:  MOVF   27,W
0192:  BSF    03.5
0193:  MOVWF  07
0194:  MOVLW  03
0195:  MOVWF  77
0196:  DECFSZ 77,F
0197:  GOTO   196
0198:  BCF    03.5
0199:  BCF    07.4
019A:  BCF    27.4
019B:  MOVF   27,W
019C:  BSF    03.5
019D:  MOVWF  07
019E:  MOVLW  04
019F:  MOVWF  77
01A0:  DECFSZ 77,F
01A1:  GOTO   1A0
01A2:  BCF    03.5
01A3:  BCF    07.3
01A4:  BCF    27.3
01A5:  MOVF   27,W
01A6:  BSF    03.5
01A7:  MOVWF  07
....................    i2c_write(ds13_addr_wr);         
01A8:  MOVLW  D0
01A9:  BCF    03.5
01AA:  MOVWF  50
01AB:  CALL   051
....................    i2c_write(0x00);     
01AC:  CLRF   50
01AD:  CALL   051
....................    for(i=0;i<9;i++)                           
01AE:  CLRF   4E
01AF:  MOVF   4E,W
01B0:  SUBLW  08
01B1:  BTFSS  03.0
01B2:  GOTO   1C9
....................    {   
....................       if(sel)  i2c_write(time_w[i]); 
01B3:  MOVF   4D,F
01B4:  BTFSC  03.2
01B5:  GOTO   1BF
01B6:  MOVLW  28
01B7:  ADDWF  4E,W
01B8:  MOVWF  04
01B9:  BCF    03.7
01BA:  MOVF   00,W
01BB:  MOVWF  4F
01BC:  MOVWF  50
01BD:  CALL   051
01BE:  GOTO   1C7
....................       else     i2c_write(time_r[i]); 
01BF:  MOVLW  31
01C0:  ADDWF  4E,W
01C1:  MOVWF  04
01C2:  BCF    03.7
01C3:  MOVF   00,W
01C4:  MOVWF  4F
01C5:  MOVWF  50
01C6:  CALL   051
01C7:  INCF   4E,F
01C8:  GOTO   1AF
....................    }                                  
....................    i2c_stop();         
01C9:  BCF    27.4
01CA:  MOVF   27,W
01CB:  BSF    03.5
01CC:  MOVWF  07
01CD:  NOP
01CE:  BCF    03.5
01CF:  BSF    27.3
01D0:  MOVF   27,W
01D1:  BSF    03.5
01D2:  MOVWF  07
01D3:  BCF    03.5
01D4:  BTFSS  07.3
01D5:  GOTO   1D4
01D6:  MOVLW  04
01D7:  MOVWF  77
01D8:  DECFSZ 77,F
01D9:  GOTO   1D8
01DA:  GOTO   1DB
01DB:  NOP
01DC:  BSF    27.4
01DD:  MOVF   27,W
01DE:  BSF    03.5
01DF:  MOVWF  07
01E0:  MOVLW  04
01E1:  MOVWF  77
01E2:  DECFSZ 77,F
01E3:  GOTO   1E2
01E4:  BCF    03.5
.................... }                       
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... //doc thoi gian    
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                              
.................... void ds1307_thoi_gian(unsigned int8 j)      
.................... {    
....................    unsigned int8 i;  
....................    i2c_start(); 
*
0103:  BSF    27.4
0104:  MOVF   27,W
0105:  BSF    03.5
0106:  MOVWF  07
0107:  MOVLW  04
0108:  MOVWF  77
0109:  DECFSZ 77,F
010A:  GOTO   109
010B:  BCF    03.5
010C:  BSF    27.3
010D:  MOVF   27,W
010E:  BSF    03.5
010F:  MOVWF  07
0110:  MOVLW  03
0111:  MOVWF  77
0112:  DECFSZ 77,F
0113:  GOTO   112
0114:  BCF    03.5
0115:  BCF    07.4
0116:  BCF    27.4
0117:  MOVF   27,W
0118:  BSF    03.5
0119:  MOVWF  07
011A:  MOVLW  04
011B:  MOVWF  77
011C:  DECFSZ 77,F
011D:  GOTO   11C
011E:  BCF    03.5
011F:  BCF    07.3
0120:  BCF    27.3
0121:  MOVF   27,W
0122:  BSF    03.5
0123:  MOVWF  07
....................    i2c_write(ds13_addr_wr); 
0124:  MOVLW  D0
0125:  BCF    03.5
0126:  MOVWF  50
0127:  CALL   051
....................    i2c_write(0x00);                      
0128:  CLRF   50
0129:  CALL   051
....................    i2c_start();                 
012A:  BSF    27.4
012B:  MOVF   27,W
012C:  BSF    03.5
012D:  MOVWF  07
012E:  MOVLW  04
012F:  MOVWF  77
0130:  DECFSZ 77,F
0131:  GOTO   130
0132:  BCF    03.5
0133:  BSF    27.3
0134:  MOVF   27,W
0135:  BSF    03.5
0136:  MOVWF  07
0137:  MOVLW  03
0138:  MOVWF  77
0139:  DECFSZ 77,F
013A:  GOTO   139
013B:  BCF    03.5
013C:  BTFSS  07.3
013D:  GOTO   13C
013E:  BCF    07.4
013F:  BCF    27.4
0140:  MOVF   27,W
0141:  BSF    03.5
0142:  MOVWF  07
0143:  MOVLW  04
0144:  MOVWF  77
0145:  DECFSZ 77,F
0146:  GOTO   145
0147:  BCF    03.5
0148:  BCF    07.3
0149:  BCF    27.3
014A:  MOVF   27,W
014B:  BSF    03.5
014C:  MOVWF  07
....................                  
....................    i2c_write(ds13_addr_rd); 
014D:  MOVLW  D1
014E:  BCF    03.5
014F:  MOVWF  50
0150:  CALL   051
....................    for(i=0;i<j;i++) time_r[i]=i2c_read();   
0151:  CLRF   4E
0152:  MOVF   4D,W
0153:  SUBWF  4E,W
0154:  BTFSC  03.0
0155:  GOTO   161
0156:  MOVLW  31
0157:  ADDWF  4E,W
0158:  MOVWF  04
0159:  BCF    03.7
015A:  MOVLW  01
015B:  MOVWF  77
015C:  CALL   0AD
015D:  MOVF   78,W
015E:  MOVWF  00
015F:  INCF   4E,F
0160:  GOTO   152
....................                                   
....................    i = i2c_read(0); //not ack, don't care i   
0161:  CLRF   77
0162:  CALL   0AD
0163:  MOVF   78,W
0164:  MOVWF  4E
....................    i2c_stop(); 
0165:  BCF    27.4
0166:  MOVF   27,W
0167:  BSF    03.5
0168:  MOVWF  07
0169:  NOP
016A:  BCF    03.5
016B:  BSF    27.3
016C:  MOVF   27,W
016D:  BSF    03.5
016E:  MOVWF  07
016F:  BCF    03.5
0170:  BTFSS  07.3
0171:  GOTO   170
0172:  MOVLW  04
0173:  MOVWF  77
0174:  DECFSZ 77,F
0175:  GOTO   174
0176:  GOTO   177
0177:  NOP
0178:  BSF    27.4
0179:  MOVF   27,W
017A:  BSF    03.5
017B:  MOVWF  07
017C:  MOVLW  04
017D:  MOVWF  77
017E:  DECFSZ 77,F
017F:  GOTO   17E
.................... }                                                                        
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   
.................... //kiem tra ma da luu: sai thi cap nhat, dung thi thoat 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx            
.................... void ds1307_setup()                                
.................... {                                               
....................    ds1307_thoi_gian(9);           
*
0101:  MOVLW  09
0102:  MOVWF  4D
....................    if(ma_qd!=ma_ds)    
*
0180:  BCF    03.5
0181:  MOVF   39,W
0182:  SUBWF  30,W
0183:  BTFSC  03.2
0184:  GOTO   1E5
....................    { 
....................       ds1307_cap_nhat_time(1); 
0185:  MOVLW  01
0186:  MOVWF  4D
....................    } 
*
01E5:  RETURN
.................... } 
.................... void ds1307_getTime()      
.................... {    
....................    unsigned int8 i;  
....................    i2c_start(); 
01E6:  BSF    27.4
01E7:  MOVF   27,W
01E8:  BSF    03.5
01E9:  MOVWF  07
01EA:  MOVLW  04
01EB:  MOVWF  77
01EC:  DECFSZ 77,F
01ED:  GOTO   1EC
01EE:  BCF    03.5
01EF:  BSF    27.3
01F0:  MOVF   27,W
01F1:  BSF    03.5
01F2:  MOVWF  07
01F3:  MOVLW  03
01F4:  MOVWF  77
01F5:  DECFSZ 77,F
01F6:  GOTO   1F5
01F7:  BCF    03.5
01F8:  BCF    07.4
01F9:  BCF    27.4
01FA:  MOVF   27,W
01FB:  BSF    03.5
01FC:  MOVWF  07
01FD:  MOVLW  04
01FE:  MOVWF  77
01FF:  DECFSZ 77,F
0200:  GOTO   1FF
0201:  BCF    03.5
0202:  BCF    07.3
0203:  BCF    27.3
0204:  MOVF   27,W
0205:  BSF    03.5
0206:  MOVWF  07
....................    i2c_write(ds13_addr_wr); 
0207:  MOVLW  D0
0208:  BCF    03.5
0209:  MOVWF  50
020A:  CALL   051
....................    i2c_write(0x00);                      
020B:  CLRF   50
020C:  CALL   051
....................    i2c_start();                 
020D:  BSF    27.4
020E:  MOVF   27,W
020F:  BSF    03.5
0210:  MOVWF  07
0211:  MOVLW  04
0212:  MOVWF  77
0213:  DECFSZ 77,F
0214:  GOTO   213
0215:  BCF    03.5
0216:  BSF    27.3
0217:  MOVF   27,W
0218:  BSF    03.5
0219:  MOVWF  07
021A:  MOVLW  03
021B:  MOVWF  77
021C:  DECFSZ 77,F
021D:  GOTO   21C
021E:  BCF    03.5
021F:  BTFSS  07.3
0220:  GOTO   21F
0221:  BCF    07.4
0222:  BCF    27.4
0223:  MOVF   27,W
0224:  BSF    03.5
0225:  MOVWF  07
0226:  MOVLW  04
0227:  MOVWF  77
0228:  DECFSZ 77,F
0229:  GOTO   228
022A:  BCF    03.5
022B:  BCF    07.3
022C:  BCF    27.3
022D:  MOVF   27,W
022E:  BSF    03.5
022F:  MOVWF  07
....................                  
....................    i2c_write(ds13_addr_rd); 
0230:  MOVLW  D1
0231:  BCF    03.5
0232:  MOVWF  50
0233:  CALL   051
....................    for(i=0;i<8;i++) time_r[i]=i2c_read();   
0234:  CLRF   4D
0235:  MOVF   4D,W
0236:  SUBLW  07
0237:  BTFSS  03.0
0238:  GOTO   244
0239:  MOVLW  31
023A:  ADDWF  4D,W
023B:  MOVWF  04
023C:  BCF    03.7
023D:  MOVLW  01
023E:  MOVWF  77
023F:  CALL   0AD
0240:  MOVF   78,W
0241:  MOVWF  00
0242:  INCF   4D,F
0243:  GOTO   235
....................                                   
....................    i = i2c_read(0); //not ack, don't care i   
0244:  CLRF   77
0245:  CALL   0AD
0246:  MOVF   78,W
0247:  MOVWF  4D
....................    i2c_stop(); 
0248:  BCF    27.4
0249:  MOVF   27,W
024A:  BSF    03.5
024B:  MOVWF  07
024C:  NOP
024D:  BCF    03.5
024E:  BSF    27.3
024F:  MOVF   27,W
0250:  BSF    03.5
0251:  MOVWF  07
0252:  BCF    03.5
0253:  BTFSS  07.3
0254:  GOTO   253
0255:  MOVLW  04
0256:  MOVWF  77
0257:  DECFSZ 77,F
0258:  GOTO   257
0259:  GOTO   25A
025A:  NOP
025B:  BSF    27.4
025C:  MOVF   27,W
025D:  BSF    03.5
025E:  MOVWF  07
025F:  MOVLW  04
0260:  MOVWF  77
0261:  DECFSZ 77,F
0262:  GOTO   261
0263:  BCF    03.5
0264:  RETURN
.................... } 
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
.................... signed int8 gt_mod=0; 
.................... //signed int8  gt_mod=0, tg_chinh=0; 
.................... #define tang 0 
.................... #define giam 1 
....................  
.................... /*Ham co chuc nang nhan dia chi va du lieu de luu vao dia chi tuong ung roi thuc hien*/ 
.................... void ds1307_luu_vao_ds(unsigned int8 dcdt,dt) 
.................... { 
....................    i2c_start(); 
*
05AE:  BSF    27.4
05AF:  MOVF   27,W
05B0:  BSF    03.5
05B1:  MOVWF  07
05B2:  MOVLW  04
05B3:  MOVWF  77
05B4:  DECFSZ 77,F
05B5:  GOTO   5B4
05B6:  BCF    03.5
05B7:  BSF    27.3
05B8:  MOVF   27,W
05B9:  BSF    03.5
05BA:  MOVWF  07
05BB:  MOVLW  03
05BC:  MOVWF  77
05BD:  DECFSZ 77,F
05BE:  GOTO   5BD
05BF:  BCF    03.5
05C0:  BCF    07.4
05C1:  BCF    27.4
05C2:  MOVF   27,W
05C3:  BSF    03.5
05C4:  MOVWF  07
05C5:  MOVLW  04
05C6:  MOVWF  77
05C7:  DECFSZ 77,F
05C8:  GOTO   5C7
05C9:  BCF    03.5
05CA:  BCF    07.3
05CB:  BCF    27.3
05CC:  MOVF   27,W
05CD:  BSF    03.5
05CE:  MOVWF  07
....................    i2c_write(ds13_addr_wr); 
05CF:  MOVLW  D0
05D0:  BCF    03.5
05D1:  MOVWF  50
05D2:  CALL   051
....................    i2c_write(dcdt); //dia chi doi tuong 
05D3:  MOVF   4D,W
05D4:  MOVWF  50
05D5:  CALL   051
....................    i2c_write(dt); //goi doi tuong (giay_ds) ra ds1307 
05D6:  MOVF   4E,W
05D7:  MOVWF  50
05D8:  CALL   051
....................    i2c_stop(); 
05D9:  BCF    27.4
05DA:  MOVF   27,W
05DB:  BSF    03.5
05DC:  MOVWF  07
05DD:  NOP
05DE:  BCF    03.5
05DF:  BSF    27.3
05E0:  MOVF   27,W
05E1:  BSF    03.5
05E2:  MOVWF  07
05E3:  BCF    03.5
05E4:  BTFSS  07.3
05E5:  GOTO   5E4
05E6:  MOVLW  04
05E7:  MOVWF  77
05E8:  DECFSZ 77,F
05E9:  GOTO   5E8
05EA:  GOTO   5EB
05EB:  NOP
05EC:  BSF    27.4
05ED:  MOVF   27,W
05EE:  BSF    03.5
05EF:  MOVWF  07
05F0:  MOVLW  04
05F1:  MOVWF  77
05F2:  DECFSZ 77,F
05F3:  GOTO   5F2
05F4:  BCF    03.5
05F5:  RETURN
.................... } 
....................  
.................... unsigned int8 tang_or_giam_so_bcd(unsigned int8 x, int1 sel) 
.................... { 
....................    unsigned int8 y,dv,ch,v; 
....................    ch=(x>>4);  dv=x&0x0f; 
*
055E:  SWAPF  4D,W
055F:  MOVWF  51
0560:  MOVLW  0F
0561:  ANDWF  51,F
0562:  MOVF   4D,W
0563:  ANDLW  0F
0564:  MOVWF  50
....................    y=ch*10+dv; 
0565:  MOVF   51,W
0566:  MOVWF  53
0567:  MOVLW  0A
0568:  MOVWF  54
*
058D:  MOVF   50,W
058E:  ADDWF  78,W
058F:  MOVWF  4F
....................    if(sel==0)  y++; 
0590:  MOVF   4E,F
0591:  BTFSS  03.2
0592:  GOTO   595
0593:  INCF   4F,F
0594:  GOTO   596
....................    else        y--; 
0595:  DECF   4F,F
....................    ch=y/10; dv=y%10; 
0596:  MOVF   4F,W
0597:  MOVWF  53
0598:  MOVLW  0A
0599:  MOVWF  54
059A:  CALL   549
059B:  MOVF   78,W
059C:  MOVWF  51
059D:  MOVF   4F,W
059E:  MOVWF  53
059F:  MOVLW  0A
05A0:  MOVWF  54
05A1:  CALL   549
05A2:  MOVF   77,W
05A3:  MOVWF  50
....................    v=(ch<<4)|dv; 
05A4:  SWAPF  51,W
05A5:  MOVWF  77
05A6:  MOVLW  F0
05A7:  ANDWF  77,F
05A8:  MOVF   77,W
05A9:  IORWF  50,W
05AA:  MOVWF  52
....................    return(v); 
05AB:  MOVF   52,W
05AC:  MOVWF  78
05AD:  RETURN
.................... } 
....................  
.................... void tang_giay() 
.................... { 
....................    if(giay_ds==0x59) giay_ds=0; 
....................    else giay_ds=tang_or_giam_so_bcd(giay_ds,tang); 
....................    ds1307_luu_vao_ds(0,giay_ds); //0-la dia chi cua giay; tham so giay_ds moi vua tang xong 
....................    //trao 2 tham so: ... thong so 2 la gia tri cua giay can luu tru vao o nho co dia chi 0 
.................... } 
.................... void tang_phut() 
.................... { 
....................    if(phut_ds==0x59) phut_ds=0; 
*
06ED:  MOVF   32,W
06EE:  SUBLW  59
06EF:  BTFSS  03.2
06F0:  GOTO   6F3
06F1:  CLRF   32
06F2:  GOTO   6F9
....................    else phut_ds=tang_or_giam_so_bcd(phut_ds,tang); 
06F3:  MOVF   32,W
06F4:  MOVWF  4D
06F5:  CLRF   4E
06F6:  CALL   55E
06F7:  MOVF   78,W
06F8:  MOVWF  32
....................    ds1307_luu_vao_ds(1,phut_ds); //1-dia chi cua phut 
06F9:  MOVLW  01
06FA:  MOVWF  4D
06FB:  MOVF   32,W
06FC:  MOVWF  4E
06FD:  CALL   5AE
.................... } 
.................... void tang_gio() 
.................... { 
....................    if(gio_ds==0x23) gio_ds=0; 
*
06B8:  MOVF   33,W
06B9:  SUBLW  23
06BA:  BTFSS  03.2
06BB:  GOTO   6BE
06BC:  CLRF   33
06BD:  GOTO   6C4
....................    else gio_ds=tang_or_giam_so_bcd(gio_ds,tang); 
06BE:  MOVF   33,W
06BF:  MOVWF  4D
06C0:  CLRF   4E
06C1:  CALL   55E
06C2:  MOVF   78,W
06C3:  MOVWF  33
....................    ds1307_luu_vao_ds(2,gio_ds); //2-dia chi cua gio 
06C4:  MOVLW  02
06C5:  MOVWF  4D
06C6:  MOVF   33,W
06C7:  MOVWF  4E
06C8:  CALL   5AE
.................... } 
.................... void chinh_tang_gpg() 
.................... { 
....................    switch(gt_mod) 
....................    { 
....................       case 3: tang_phut(); 
....................               break; 
....................       case 2: tang_gio(); 
....................               break; 
....................       default:break; 
....................    } 
.................... } 
....................  
.................... void tang_nam() 
.................... { 
....................    if(nam_ds==0x99) nam_ds=0; 
....................    else nam_ds=tang_or_giam_so_bcd(nam_ds,tang); 
....................    ds1307_luu_vao_ds(6,nam_ds);  
.................... } 
.................... void tang_thang() 
.................... { 
....................    if(thang_ds==0x12) thang_ds=1; 
*
0683:  MOVF   36,W
0684:  SUBLW  12
0685:  BTFSS  03.2
0686:  GOTO   68A
0687:  MOVLW  01
0688:  MOVWF  36
0689:  GOTO   690
....................    else thang_ds=tang_or_giam_so_bcd(thang_ds,tang); 
068A:  MOVF   36,W
068B:  MOVWF  4D
068C:  CLRF   4E
068D:  CALL   55E
068E:  MOVF   78,W
068F:  MOVWF  36
....................    ds1307_luu_vao_ds(5,thang_ds);  
0690:  MOVLW  05
0691:  MOVWF  4D
0692:  MOVF   36,W
0693:  MOVWF  4E
0694:  CALL   5AE
.................... } 
....................  
.................... void tang_ngay() 
.................... { 
....................    if(ngay_ds==0x31) ngay_ds=1; 
*
064E:  MOVF   35,W
064F:  SUBLW  31
0650:  BTFSS  03.2
0651:  GOTO   655
0652:  MOVLW  01
0653:  MOVWF  35
0654:  GOTO   65B
....................    else ngay_ds=tang_or_giam_so_bcd(ngay_ds,tang); 
0655:  MOVF   35,W
0656:  MOVWF  4D
0657:  CLRF   4E
0658:  CALL   55E
0659:  MOVF   78,W
065A:  MOVWF  35
....................    ds1307_luu_vao_ds(4,ngay_ds);  
065B:  MOVLW  04
065C:  MOVWF  4D
065D:  MOVF   35,W
065E:  MOVWF  4E
065F:  CALL   5AE
.................... } 
....................  
....................  
.................... void chinh_tang_thu() 
.................... { 
....................    if(thu_ds==8)  thu_ds=2; 
....................    else           thu_ds++; 
....................    ds1307_luu_vao_ds(3,thu_ds); 
.................... } 
....................  
....................  
.................... void giam_giay() 
.................... { 
....................    if(giay_ds==0) giay_ds=0x59; 
....................    else giay_ds=tang_or_giam_so_bcd(giay_ds,giam); //tra ve so BCD bang giay_ds(bCD) tang len 1 
....................    ds1307_luu_vao_ds(0,giay_ds); //0-la dia chi giay; tham so giay_ds moi vua tang xong 
.................... } 
....................  
.................... void giam_phut() 
.................... { 
....................    if(phut_ds==0) phut_ds=0x59; 
*
0704:  MOVF   32,F
0705:  BTFSS  03.2
0706:  GOTO   70A
0707:  MOVLW  59
0708:  MOVWF  32
0709:  GOTO   711
....................    else phut_ds=tang_or_giam_so_bcd(phut_ds,giam); 
070A:  MOVF   32,W
070B:  MOVWF  4D
070C:  MOVLW  01
070D:  MOVWF  4E
070E:  CALL   55E
070F:  MOVF   78,W
0710:  MOVWF  32
....................    ds1307_luu_vao_ds(1,phut_ds); //1-la dia chi giay; tham so giay_ds moi vua tang xong 
0711:  MOVLW  01
0712:  MOVWF  4D
0713:  MOVF   32,W
0714:  MOVWF  4E
0715:  CALL   5AE
.................... } 
....................  
.................... void giam_gio() 
.................... { 
....................    if(gio_ds==0) gio_ds=0x23; 
*
06CF:  MOVF   33,F
06D0:  BTFSS  03.2
06D1:  GOTO   6D5
06D2:  MOVLW  23
06D3:  MOVWF  33
06D4:  GOTO   6DC
....................    else gio_ds=tang_or_giam_so_bcd(gio_ds,giam); 
06D5:  MOVF   33,W
06D6:  MOVWF  4D
06D7:  MOVLW  01
06D8:  MOVWF  4E
06D9:  CALL   55E
06DA:  MOVF   78,W
06DB:  MOVWF  33
....................    ds1307_luu_vao_ds(2,gio_ds); //2-la dia chi giay; tham so giay_ds moi vua tang xong 
06DC:  MOVLW  02
06DD:  MOVWF  4D
06DE:  MOVF   33,W
06DF:  MOVWF  4E
06E0:  CALL   5AE
.................... } 
....................  
.................... void giam_nam() 
.................... { 
....................    if(nam_ds==0) nam_ds=0x99; 
....................    else nam_ds=tang_or_giam_so_bcd(nam_ds,giam); 
....................    ds1307_luu_vao_ds(6,nam_ds);  
.................... } 
.................... void giam_thang() 
.................... { 
....................    if(thang_ds==1) thang_ds=0x12; 
*
069B:  DECFSZ 36,W
069C:  GOTO   6A0
069D:  MOVLW  12
069E:  MOVWF  36
069F:  GOTO   6A7
....................    else thang_ds=tang_or_giam_so_bcd(thang_ds,giam); 
06A0:  MOVF   36,W
06A1:  MOVWF  4D
06A2:  MOVLW  01
06A3:  MOVWF  4E
06A4:  CALL   55E
06A5:  MOVF   78,W
06A6:  MOVWF  36
....................    ds1307_luu_vao_ds(5,thang_ds);  
06A7:  MOVLW  05
06A8:  MOVWF  4D
06A9:  MOVF   36,W
06AA:  MOVWF  4E
06AB:  CALL   5AE
.................... } 
....................  
.................... void giam_ngay() 
.................... { 
....................    if(ngay_ds==1) ngay_ds=0x31; 
*
0666:  DECFSZ 35,W
0667:  GOTO   66B
0668:  MOVLW  31
0669:  MOVWF  35
066A:  GOTO   672
....................    else ngay_ds=tang_or_giam_so_bcd(ngay_ds,giam); 
066B:  MOVF   35,W
066C:  MOVWF  4D
066D:  MOVLW  01
066E:  MOVWF  4E
066F:  CALL   55E
0670:  MOVF   78,W
0671:  MOVWF  35
....................    ds1307_luu_vao_ds(4,ngay_ds);  
0672:  MOVLW  04
0673:  MOVWF  4D
0674:  MOVF   35,W
0675:  MOVWF  4E
0676:  CALL   5AE
.................... } 
....................  
.................... void chinh_giam_thu() 
.................... { 
....................    if(thu_ds==2)  thu_ds=8; 
....................    else           thu_ds--; 
....................    ds1307_luu_vao_ds(3,thu_ds); 
.................... } 
....................  
....................  
.................... #define ssdo   pin_c6 
.................... #define ssck   pin_c5 
.................... #define rck    pin_c7 
.................... #define up     pin_b1 
.................... #define dw     pin_b2 
.................... #define mod    pin_b0 
....................  
.................... #define warning_Led     pin_e1 
....................  
.................... unsigned int8  bdn1, bdn2, bdn3, i; 
.................... unsigned int8 leg_7seg[4] = {0xff, 0xff, 0xff, 0xff}; 
*
0782:  MOVLW  FF
0783:  MOVWF  3F
0784:  MOVWF  40
0785:  MOVWF  41
0786:  MOVWF  42
.................... unsigned int8 scan_code[5] = {0x08, 0x04, 0x02, 0x01};  
0787:  MOVLW  08
0788:  MOVWF  43
0789:  MOVLW  04
078A:  MOVWF  44
078B:  MOVLW  02
078C:  MOVWF  45
078D:  MOVLW  01
078E:  MOVWF  46
078F:  CLRF   47
.................... unsigned int16 tempt, temSet; 
.................... int1 statusLedWarn = false; 
....................  
.................... const unsigned char ma7doan[16]= { 
....................    0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,         
....................    0x80,0x90,0x88,0x83,0xc6,0xa1,0x86,0x8e}; 
....................  
.................... #int_timer1 
.................... void itr_timer1() 
.................... { 
....................    bdn1++; 
*
0045:  INCF   3B,F
....................    bdn2++; 
0046:  INCF   3C,F
....................    bdn3++; 
0047:  INCF   3D,F
....................    set_timer1(3036); 
0048:  CLRF   0E
0049:  MOVLW  0B
004A:  MOVWF  0F
004B:  MOVLW  DC
004C:  MOVWF  0E
004D:  BCF    0C.0
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   01D
.................... } 
....................  
....................  
....................  
.................... void put_1byte(unsigned int8 x) 
.................... { 
....................    unsigned int8   sb;    
....................    #bit msb  = x.7 
....................    for (sb=0; sb<8;sb++) 
*
02B0:  CLRF   50
02B1:  MOVF   50,W
02B2:  SUBLW  07
02B3:  BTFSS  03.0
02B4:  GOTO   2CF
....................    {                                                  
....................       output_bit(ssdo,msb);     
02B5:  BTFSC  4F.7
02B6:  GOTO   2B9
02B7:  BCF    07.6
02B8:  GOTO   2BA
02B9:  BSF    07.6
02BA:  BCF    27.6
02BB:  MOVF   27,W
02BC:  BSF    03.5
02BD:  MOVWF  07
....................       output_low(ssck);  
02BE:  BCF    03.5
02BF:  BCF    27.5
02C0:  MOVF   27,W
02C1:  BSF    03.5
02C2:  MOVWF  07
02C3:  BCF    03.5
02C4:  BCF    07.5
....................       output_high(ssck); 
02C5:  BCF    27.5
02C6:  MOVF   27,W
02C7:  BSF    03.5
02C8:  MOVWF  07
02C9:  BCF    03.5
02CA:  BSF    07.5
....................       x= x<<1;          
02CB:  BCF    03.0
02CC:  RLF    4F,F
02CD:  INCF   50,F
02CE:  GOTO   2B1
....................    } 
02CF:  RETURN
.................... } 
....................  
.................... void led7seg_display() 
.................... {                                                                   
....................    for(i = 0; i < 4; i++) 
02D0:  CLRF   3E
02D1:  MOVF   3E,W
02D2:  SUBLW  03
02D3:  BTFSS  03.0
02D4:  GOTO   307
....................    { 
....................       output_low(rck); 
02D5:  BCF    27.7
02D6:  MOVF   27,W
02D7:  BSF    03.5
02D8:  MOVWF  07
02D9:  BCF    03.5
02DA:  BCF    07.7
....................       put_1byte(leg_7seg[i]);    
02DB:  MOVLW  3F
02DC:  ADDWF  3E,W
02DD:  MOVWF  04
02DE:  BCF    03.7
02DF:  MOVF   00,W
02E0:  MOVWF  4E
02E1:  MOVWF  4F
02E2:  CALL   2B0
....................       put_1byte(scan_code[i]); 
02E3:  MOVLW  43
02E4:  ADDWF  3E,W
02E5:  MOVWF  04
02E6:  BCF    03.7
02E7:  MOVF   00,W
02E8:  MOVWF  4E
02E9:  MOVWF  4F
02EA:  CALL   2B0
....................       output_high(rck); 
02EB:  BCF    27.7
02EC:  MOVF   27,W
02ED:  BSF    03.5
02EE:  MOVWF  07
02EF:  BCF    03.5
02F0:  BSF    07.7
....................        
....................       delay_ms(1);   
02F1:  MOVLW  01
02F2:  MOVWF  4E
02F3:  CALL   29C
....................        
....................       output_low(rck); 
02F4:  BCF    27.7
02F5:  MOVF   27,W
02F6:  BSF    03.5
02F7:  MOVWF  07
02F8:  BCF    03.5
02F9:  BCF    07.7
....................       put_1byte(0xff);    
02FA:  MOVLW  FF
02FB:  MOVWF  4F
02FC:  CALL   2B0
....................       put_1byte(0); 
02FD:  CLRF   4F
02FE:  CALL   2B0
....................       output_high(rck); 
02FF:  BCF    27.7
0300:  MOVF   27,W
0301:  BSF    03.5
0302:  MOVWF  07
0303:  BCF    03.5
0304:  BSF    07.7
0305:  INCF   3E,F
0306:  GOTO   2D1
....................    } 
0307:  RETURN
.................... }   
....................  
.................... void displayTempt() 
.................... { 
....................    tempt = read_adc()/2.046; 
*
03CC:  BSF    1F.1
03CD:  BTFSC  1F.1
03CE:  GOTO   3CD
03CF:  MOVF   1E,W
03D0:  MOVWF  7A
03D1:  BSF    03.5
03D2:  MOVF   1E,W
03D3:  BCF    03.5
03D4:  MOVWF  4D
03D5:  MOVF   7A,W
03D6:  MOVWF  4E
03D7:  MOVF   4E,W
03D8:  MOVWF  50
03D9:  MOVF   4D,W
03DA:  MOVWF  4F
*
03F7:  MOVF   7A,W
03F8:  MOVWF  52
03F9:  MOVF   79,W
03FA:  MOVWF  51
03FB:  MOVF   78,W
03FC:  MOVWF  50
03FD:  MOVF   77,W
03FE:  MOVWF  4F
03FF:  MOVLW  AA
0400:  MOVWF  56
0401:  MOVLW  F1
0402:  MOVWF  55
0403:  MOVLW  02
0404:  MOVWF  54
0405:  MOVLW  80
0406:  MOVWF  53
*
04D0:  MOVF   7A,W
04D1:  MOVWF  50
04D2:  MOVF   79,W
04D3:  MOVWF  4F
04D4:  MOVF   78,W
04D5:  MOVWF  4E
04D6:  MOVF   77,W
04D7:  MOVWF  4D
*
04F6:  MOVF   79,W
04F7:  MOVWF  49
04F8:  MOVF   78,W
04F9:  MOVWF  48
....................    leg_7seg[3] = 0xff -1 -8 -16 -32; 
04FA:  MOVLW  C6
04FB:  MOVWF  42
....................    leg_7seg[2] = 0xff-1 - 2 -32 -64;  
04FC:  MOVLW  9C
04FD:  MOVWF  41
....................    leg_7seg[1] = ma7doan[tempt%10%10]; 
04FE:  MOVF   49,W
04FF:  MOVWF  50
0500:  MOVF   48,W
0501:  MOVWF  4F
0502:  CLRF   52
0503:  MOVLW  0A
0504:  MOVWF  51
0505:  CALL   36D
0506:  MOVF   77,W
0507:  MOVWF  4D
0508:  MOVF   7A,W
0509:  MOVWF  4E
050A:  MOVWF  50
050B:  MOVF   77,W
050C:  MOVWF  4F
050D:  CLRF   52
050E:  MOVLW  0A
050F:  MOVWF  51
0510:  CALL   36D
0511:  MOVF   77,W
0512:  MOVWF  4D
0513:  MOVF   7A,W
0514:  MOVWF  4E
0515:  MOVWF  7A
0516:  MOVF   77,W
0517:  CALL   031
0518:  MOVWF  78
0519:  MOVWF  40
....................    leg_7seg[0] = ma7doan[tempt/10%10]; 
051A:  MOVF   49,W
051B:  MOVWF  50
051C:  MOVF   48,W
051D:  MOVWF  4F
051E:  CLRF   52
051F:  MOVLW  0A
0520:  MOVWF  51
0521:  CALL   36D
0522:  MOVF   79,W
0523:  MOVWF  4E
0524:  MOVF   78,W
0525:  MOVWF  4D
0526:  MOVF   79,W
0527:  MOVWF  50
0528:  MOVF   78,W
0529:  MOVWF  4F
052A:  CLRF   52
052B:  MOVLW  0A
052C:  MOVWF  51
052D:  CALL   36D
052E:  MOVF   77,W
052F:  MOVWF  4D
0530:  MOVF   7A,W
0531:  MOVWF  4E
0532:  MOVWF  7A
0533:  MOVF   77,W
0534:  CALL   031
0535:  MOVWF  78
0536:  MOVWF  3F
.................... } 
.................... void displayTemptSet() 
.................... { 
....................    leg_7seg[3] = 0xff - 64; 
*
061C:  MOVLW  BF
061D:  MOVWF  42
....................    leg_7seg[2] = ma7doan[temSet%10]; 
061E:  MOVF   4B,W
061F:  MOVWF  50
0620:  MOVF   4A,W
0621:  MOVWF  4F
0622:  CLRF   52
0623:  MOVLW  0A
0624:  MOVWF  51
0625:  CALL   36D
0626:  MOVF   77,W
0627:  MOVWF  4D
0628:  MOVF   7A,W
0629:  MOVWF  4E
062A:  MOVWF  7A
062B:  MOVF   77,W
062C:  CALL   031
062D:  MOVWF  78
062E:  MOVWF  41
....................    leg_7seg[1] = ma7doan[temSet/10]; 
062F:  MOVF   4B,W
0630:  MOVWF  50
0631:  MOVF   4A,W
0632:  MOVWF  4F
0633:  CLRF   52
0634:  MOVLW  0A
0635:  MOVWF  51
0636:  CALL   36D
0637:  MOVF   79,W
0638:  MOVWF  4E
0639:  MOVF   78,W
063A:  MOVWF  4D
063B:  MOVF   79,W
063C:  MOVWF  7A
063D:  MOVF   78,W
063E:  CALL   031
063F:  MOVWF  78
0640:  MOVWF  40
....................    leg_7seg[0] = 0xff - 64; 
0641:  MOVLW  BF
0642:  MOVWF  3F
.................... } 
.................... void displayDate() 
.................... { 
....................     leg_7seg[3] = ma7doan[thang_ds%16]; 
*
0392:  MOVF   36,W
0393:  ANDLW  0F
0394:  CALL   031
0395:  MOVWF  78
0396:  MOVWF  42
....................     leg_7seg[2] = ma7doan[thang_ds/16];  
0397:  SWAPF  36,W
0398:  MOVWF  77
0399:  MOVLW  0F
039A:  ANDWF  77,F
039B:  MOVF   77,W
039C:  CALL   031
039D:  MOVWF  78
039E:  MOVWF  41
....................     leg_7seg[1] = ma7doan[ngay_ds%16]&0x7f; 
039F:  MOVF   35,W
03A0:  ANDLW  0F
03A1:  CALL   031
03A2:  ANDLW  7F
03A3:  MOVWF  40
....................     leg_7seg[0] = ma7doan[ngay_ds/16]; 
03A4:  SWAPF  35,W
03A5:  MOVWF  77
03A6:  MOVLW  0F
03A7:  ANDWF  77,F
03A8:  MOVF   77,W
03A9:  CALL   031
03AA:  MOVWF  78
03AB:  MOVWF  3F
03AC:  RETURN
.................... } 
.................... void displayTime() 
.................... { 
....................     leg_7seg[3] = ma7doan[phut_ds%16]; 
03AD:  MOVF   32,W
03AE:  ANDLW  0F
03AF:  CALL   031
03B0:  MOVWF  78
03B1:  MOVWF  42
....................     leg_7seg[2] = ma7doan[phut_ds/16];  
03B2:  SWAPF  32,W
03B3:  MOVWF  77
03B4:  MOVLW  0F
03B5:  ANDWF  77,F
03B6:  MOVF   77,W
03B7:  CALL   031
03B8:  MOVWF  78
03B9:  MOVWF  41
....................     leg_7seg[1] = ma7doan[gio_ds%16]&0x7f; 
03BA:  MOVF   33,W
03BB:  ANDLW  0F
03BC:  CALL   031
03BD:  ANDLW  7F
03BE:  MOVWF  40
....................     leg_7seg[0] = ma7doan[gio_ds/16]; 
03BF:  SWAPF  33,W
03C0:  MOVWF  77
03C1:  MOVLW  0F
03C2:  ANDWF  77,F
03C3:  MOVF   77,W
03C4:  CALL   031
03C5:  MOVWF  78
03C6:  MOVWF  3F
03C7:  RETURN
.................... } 
....................  
.................... void normalDisplay() 
.................... { 
....................    if(bdn1 < 10)      displayTempt(); 
03C8:  MOVF   3B,W
03C9:  SUBLW  09
03CA:  BTFSS  03.0
03CB:  GOTO   538
*
0537:  GOTO   546
....................    else if(bdn1 < 20) displayDate(); 
0538:  MOVF   3B,W
0539:  SUBLW  13
053A:  BTFSS  03.0
053B:  GOTO   53E
053C:  CALL   392
053D:  GOTO   546
....................    else if(bdn1 < 30) displayTime(); 
053E:  MOVF   3B,W
053F:  SUBLW  1D
0540:  BTFSS  03.0
0541:  GOTO   544
0542:  CALL   3AD
0543:  GOTO   546
....................    else bdn1 = bdn1 - 30; 
0544:  MOVLW  1E
0545:  SUBWF  3B,F
0546:  BCF    0A.3
0547:  BCF    0A.4
0548:  GOTO   7D7 (RETURN)
.................... } 
....................  
....................  
.................... int1 phim_cd(int1 pin)    
.................... {                     
....................    if (!input(pin))    
*
0308:  MOVF   4D,W
0309:  MOVWF  4E
030A:  MOVLW  01
030B:  MOVWF  4F
030C:  CLRF   51
030D:  MOVLW  80
030E:  MOVWF  50
030F:  CALL   265
0310:  MOVF   4D,W
0311:  MOVWF  4E
0312:  CLRF   50
0313:  CLRF   4F
0314:  CALL   285
0315:  BTFSC  78.0
0316:  GOTO   340
....................    {         
....................       delay_ms(20);                                      
0317:  MOVLW  14
0318:  MOVWF  4E
0319:  CALL   29C
....................       if (!input(pin)) 
031A:  MOVF   4D,W
031B:  MOVWF  4E
031C:  MOVLW  01
031D:  MOVWF  4F
031E:  CLRF   51
031F:  MOVLW  80
0320:  MOVWF  50
0321:  CALL   265
0322:  MOVF   4D,W
0323:  MOVWF  4E
0324:  CLRF   50
0325:  CLRF   4F
0326:  CALL   285
0327:  BTFSC  78.0
0328:  GOTO   33D
....................       { 
....................          while(!input(pin)) { led7seg_display(); 
0329:  MOVF   4D,W
032A:  MOVWF  4E
032B:  MOVLW  01
032C:  MOVWF  4F
032D:  CLRF   51
032E:  MOVLW  80
032F:  MOVWF  50
0330:  CALL   265
0331:  MOVF   4D,W
0332:  MOVWF  4E
0333:  CLRF   50
0334:  CLRF   4F
0335:  CALL   285
0336:  BTFSC  78.0
0337:  GOTO   33A
0338:  CALL   2D0
0339:  GOTO   329
.................... } 
....................          return 1;       
033A:  MOVLW  01
033B:  MOVWF  78
033C:  GOTO   342
....................       }                       
....................       return 0;    
033D:  MOVLW  00
033E:  MOVWF  78
033F:  GOTO   342
....................    }          
....................   return 0;   
0340:  MOVLW  00
0341:  MOVWF  78
0342:  RETURN
.................... }  
....................  
.................... void phim_mod() 
.................... { 
....................    if(phim_cd(mod)) 
0343:  MOVLW  30
0344:  MOVWF  4D
0345:  CALL   308
0346:  MOVF   78,F
0347:  BTFSC  03.2
0348:  GOTO   350
....................    { 
....................       gt_mod++; 
0349:  INCF   3A,F
....................       if(gt_mod>5) gt_mod=0; 
034A:  BTFSC  3A.7
034B:  GOTO   350
034C:  MOVF   3A,W
034D:  SUBLW  05
034E:  BTFSS  03.0
034F:  CLRF   3A
....................    } 
0350:  BCF    0A.3
0351:  BCF    0A.4
0352:  GOTO   7C9 (RETURN)
.................... } 
.................... void setButtonAlls() 
.................... { 
....................    if(gt_mod == 1) 
*
05FA:  DECFSZ 3A,W
05FB:  GOTO   644
....................    { 
....................       if(phim_cd(up) && temSet < 99) temSet++; 
05FC:  MOVLW  31
05FD:  MOVWF  4D
05FE:  CALL   308
05FF:  MOVF   78,F
0600:  BTFSC  03.2
0601:  GOTO   60C
0602:  MOVF   4B,F
0603:  BTFSS  03.2
0604:  GOTO   60C
0605:  MOVF   4A,W
0606:  SUBLW  62
0607:  BTFSS  03.0
0608:  GOTO   60C
0609:  INCF   4A,F
060A:  BTFSC  03.2
060B:  INCF   4B,F
....................       if(phim_cd(dw) && temSet > 0)  temSet--; 
060C:  MOVLW  32
060D:  MOVWF  4D
060E:  CALL   308
060F:  MOVF   78,F
0610:  BTFSC  03.2
0611:  GOTO   61C
0612:  MOVF   4A,F
0613:  BTFSS  03.2
0614:  GOTO   618
0615:  MOVF   4B,F
0616:  BTFSC  03.2
0617:  GOTO   61C
0618:  MOVF   4A,W
0619:  BTFSC  03.2
061A:  DECF   4B,F
061B:  DECF   4A,F
....................       displayTemptSet(); 
....................    } 
*
0643:  GOTO   717
....................    else if(gt_mod == 2) 
0644:  MOVF   3A,W
0645:  SUBLW  02
0646:  BTFSS  03.2
0647:  GOTO   679
....................    { 
....................       if(phim_cd(up)) tang_ngay(); 
0648:  MOVLW  31
0649:  MOVWF  4D
064A:  CALL   308
064B:  MOVF   78,F
064C:  BTFSC  03.2
064D:  GOTO   660
....................       if(phim_cd(dw)) giam_ngay(); 
*
0660:  MOVLW  32
0661:  MOVWF  4D
0662:  CALL   308
0663:  MOVF   78,F
0664:  BTFSC  03.2
0665:  GOTO   677
....................       displayDate(); 
*
0677:  CALL   392
....................    }  
0678:  GOTO   717
....................    else if(gt_mod == 3) 
0679:  MOVF   3A,W
067A:  SUBLW  03
067B:  BTFSS  03.2
067C:  GOTO   6AE
....................    { 
....................       if(phim_cd(up)) tang_thang(); 
067D:  MOVLW  31
067E:  MOVWF  4D
067F:  CALL   308
0680:  MOVF   78,F
0681:  BTFSC  03.2
0682:  GOTO   695
....................       if(phim_cd(dw)) giam_thang(); 
*
0695:  MOVLW  32
0696:  MOVWF  4D
0697:  CALL   308
0698:  MOVF   78,F
0699:  BTFSC  03.2
069A:  GOTO   6AC
....................       displayDate(); 
*
06AC:  CALL   392
....................    } 
06AD:  GOTO   717
....................     else if(gt_mod == 4) 
06AE:  MOVF   3A,W
06AF:  SUBLW  04
06B0:  BTFSS  03.2
06B1:  GOTO   6E3
....................    { 
....................       if(phim_cd(up)) tang_gio(); 
06B2:  MOVLW  31
06B3:  MOVWF  4D
06B4:  CALL   308
06B5:  MOVF   78,F
06B6:  BTFSC  03.2
06B7:  GOTO   6C9
....................       if(phim_cd(dw)) giam_gio(); 
*
06C9:  MOVLW  32
06CA:  MOVWF  4D
06CB:  CALL   308
06CC:  MOVF   78,F
06CD:  BTFSC  03.2
06CE:  GOTO   6E1
....................       displayTime(); 
*
06E1:  CALL   3AD
....................    } 
06E2:  GOTO   717
....................     else if(gt_mod == 5) 
06E3:  MOVF   3A,W
06E4:  SUBLW  05
06E5:  BTFSS  03.2
06E6:  GOTO   717
....................    { 
....................       if(phim_cd(up)) tang_phut(); 
06E7:  MOVLW  31
06E8:  MOVWF  4D
06E9:  CALL   308
06EA:  MOVF   78,F
06EB:  BTFSC  03.2
06EC:  GOTO   6FE
....................       if(phim_cd(dw)) giam_phut(); 
*
06FE:  MOVLW  32
06FF:  MOVWF  4D
0700:  CALL   308
0701:  MOVF   78,F
0702:  BTFSC  03.2
0703:  GOTO   716
....................       displayTime(); 
*
0716:  CALL   3AD
....................    } 
.................... } 
....................  
.................... void offSetButton() 
.................... { 
....................    if(gt_mod == 1) 
*
071C:  DECFSZ 3A,W
071D:  GOTO   722
....................    { 
....................     leg_7seg[2] = 0xff; 
071E:  MOVLW  FF
071F:  MOVWF  41
....................     leg_7seg[1] = 0xff; 
0720:  MOVWF  40
....................    } 
0721:  GOTO   741
....................    else if(gt_mod == 2) 
0722:  MOVF   3A,W
0723:  SUBLW  02
0724:  BTFSS  03.2
0725:  GOTO   72A
....................    { 
....................      leg_7seg[1] = 0xff; 
0726:  MOVLW  FF
0727:  MOVWF  40
....................      leg_7seg[0] = 0xff; 
0728:  MOVWF  3F
....................    }  
0729:  GOTO   741
....................    else if(gt_mod == 3) 
072A:  MOVF   3A,W
072B:  SUBLW  03
072C:  BTFSS  03.2
072D:  GOTO   732
....................    { 
....................      leg_7seg[3] = 0xff; 
072E:  MOVLW  FF
072F:  MOVWF  42
....................      leg_7seg[2] = 0xff; 
0730:  MOVWF  41
....................    } 
0731:  GOTO   741
....................     else if(gt_mod == 4) 
0732:  MOVF   3A,W
0733:  SUBLW  04
0734:  BTFSS  03.2
0735:  GOTO   73A
....................    { 
....................      leg_7seg[1] = 0xff; 
0736:  MOVLW  FF
0737:  MOVWF  40
....................      leg_7seg[0] = 0xff; 
0738:  MOVWF  3F
....................    } 
0739:  GOTO   741
....................     else if(gt_mod == 5) 
073A:  MOVF   3A,W
073B:  SUBLW  05
073C:  BTFSS  03.2
073D:  GOTO   741
....................    { 
....................       leg_7seg[3] = 0xff; 
073E:  MOVLW  FF
073F:  MOVWF  42
....................       leg_7seg[2] = 0xff; 
0740:  MOVWF  41
....................    } 
.................... } 
....................  
.................... void displayBlinkSetButtons() 
.................... { 
....................    if(bdn2 < 5)         setButtonAlls(); 
*
05F6:  MOVF   3C,W
05F7:  SUBLW  04
05F8:  BTFSS  03.0
05F9:  GOTO   718
*
0717:  GOTO   744
....................    else if(bdn2 < 10)   offSetButton(); 
0718:  MOVF   3C,W
0719:  SUBLW  09
071A:  BTFSS  03.0
071B:  GOTO   742
*
0741:  GOTO   744
....................    else bdn2 = bdn2 - 10; 
0742:  MOVLW  0A
0743:  SUBWF  3C,F
0744:  BCF    0A.3
0745:  BCF    0A.4
0746:  GOTO   7D9 (RETURN)
.................... } 
....................  
.................... void alarmHighTempt() 
.................... { 
....................    if(tempt > temSet) output_bit(warning_Led, statusLedWarn); 
*
0353:  MOVF   4B,W
0354:  SUBWF  49,W
0355:  BTFSS  03.0
0356:  GOTO   366
0357:  BTFSS  03.2
0358:  GOTO   35D
0359:  MOVF   48,W
035A:  SUBWF  4A,W
035B:  BTFSC  03.0
035C:  GOTO   366
035D:  BTFSC  4C.0
035E:  GOTO   361
035F:  BCF    09.1
0360:  GOTO   362
0361:  BSF    09.1
0362:  BSF    03.5
0363:  BCF    09.1
0364:  GOTO   369
0365:  BCF    03.5
....................    else               output_bit(warning_Led, 0); 
0366:  BCF    09.1
0367:  BSF    03.5
0368:  BCF    09.1
0369:  BCF    03.5
036A:  BCF    0A.3
036B:  BCF    0A.4
036C:  GOTO   7D6 (RETURN)
.................... } 
.................... void main() 
*
0747:  MOVF   03,W
0748:  ANDLW  1F
0749:  MOVWF  03
074A:  MOVLW  FF
074B:  MOVWF  27
074C:  CLRF   3A
074D:  BCF    4C.0
074E:  BSF    03.5
074F:  BSF    03.6
0750:  MOVF   09,W
0751:  ANDLW  C0
0752:  MOVWF  09
0753:  BCF    03.6
0754:  BCF    1F.4
0755:  BCF    1F.5
0756:  MOVLW  00
0757:  BSF    03.6
0758:  MOVWF  08
0759:  BCF    03.5
075A:  CLRF   07
075B:  CLRF   08
075C:  CLRF   09
075D:  BCF    03.7
.................... { 
....................    set_tris_c(0xff); 
*
0790:  MOVLW  FF
0791:  BSF    03.5
0792:  MOVWF  07
0793:  BCF    03.5
0794:  MOVWF  27
....................    set_tris_e(0x01); 
0795:  BSF    03.5
0796:  BSF    09.0
0797:  BCF    09.1
0798:  BCF    09.2
0799:  BCF    09.3
....................    setup_adc(adc_clock_div_32);         
079A:  BCF    03.5
079B:  BCF    1F.6
079C:  BSF    1F.7
079D:  BSF    03.5
079E:  BSF    1F.7
079F:  BCF    03.5
07A0:  BSF    1F.0
....................    setup_adc_ports(san5|vss_vdd);  
07A1:  BSF    03.5
07A2:  BSF    03.6
07A3:  MOVF   09,W
07A4:  ANDLW  C0
07A5:  MOVWF  09
07A6:  BCF    03.6
07A7:  BCF    1F.4
07A8:  BCF    1F.5
07A9:  MOVLW  20
07AA:  BSF    03.6
07AB:  MOVWF  08
....................    set_adc_channel(5); 
07AC:  MOVLW  14
07AD:  MOVWF  78
07AE:  BCF    03.5
07AF:  BCF    03.6
07B0:  MOVF   1F,W
07B1:  ANDLW  C3
07B2:  IORWF  78,W
07B3:  MOVWF  1F
....................    tempt = 0; temSet = 30; 
07B4:  CLRF   49
07B5:  CLRF   48
07B6:  CLRF   4B
07B7:  MOVLW  1E
07B8:  MOVWF  4A
....................     
....................    ds1307_setup(); 
07B9:  CALL   101
....................     
....................    setup_timer_1(t1_internal|t1_div_by_8); 
07BA:  MOVLW  35
07BB:  MOVWF  10
....................    set_timer1(3036); 
07BC:  CLRF   0E
07BD:  MOVLW  0B
07BE:  MOVWF  0F
07BF:  MOVLW  DC
07C0:  MOVWF  0E
....................    enable_interrupts(global); 
07C1:  MOVLW  C0
07C2:  IORWF  0B,F
....................    enable_interrupts(int_timer1); 
07C3:  BSF    03.5
07C4:  BSF    0C.0
....................    ds1307_setup(); 
07C5:  BCF    03.5
07C6:  CALL   101
....................    ds1307_getTime(); 
07C7:  CALL   1E6
....................    while(true) 
....................    { 
....................        phim_mod(); 
07C8:  GOTO   343
....................        if(gt_mod == 0)  
07C9:  MOVF   3A,F
07CA:  BTFSS  03.2
07CB:  GOTO   7D8
....................        { 
....................             if(bdn3 >= 10)  
07CC:  MOVF   3D,W
07CD:  SUBLW  09
07CE:  BTFSC  03.0
07CF:  GOTO   7D5
....................          { 
....................             bdn3 = bdn3 - 10; 
07D0:  MOVLW  0A
07D1:  SUBWF  3D,F
....................             ds1307_getTime(); 
07D2:  CALL   1E6
....................             statusLedWarn = ~statusLedWarn; 
07D3:  MOVLW  01
07D4:  XORWF  4C,F
....................          } 
....................          alarmHighTempt(); 
07D5:  GOTO   353
....................          normalDisplay(); 
07D6:  GOTO   3C8
....................        } 
07D7:  GOTO   7D9
....................        else            displayBlinkSetButtons(); 
07D8:  GOTO   5F6
....................        led7seg_display(); 
07D9:  CALL   2D0
07DA:  GOTO   7C8
....................  
....................    } 
.................... } 
07DB:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
